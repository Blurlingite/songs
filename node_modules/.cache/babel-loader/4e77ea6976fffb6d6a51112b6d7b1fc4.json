{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/songs/src/components/SongDetail.js\";\n// This component will not be making any changes to the state, since we are just using it to display details of a song. Since it won't change the state, we will not be using action creators here (like \"selectSong\")\n// Also since we aren't changing state, this will be a functional component instead of a class component\nimport React from \"react\"; // We can use connect in functional components too\n\nimport { connect } from \"react-redux\";\n\nconst SongDetail = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Song detail\");\n};\n\nconst mapStateToProps = state => {\n  // From the incoming state, we want to access the \"selectedSong\" field which has the currently selected song. We assign it to a field called \"song\". We return this as a javascript object (and you will see it show up in the console in this format if you use console.log())\n  return {\n    song: state.selectedSong\n  };\n};\n\nexport default connect(mapStateToProps)(SongDetail);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/songs/src/components/SongDetail.js"],"names":["React","connect","SongDetail","props","console","log","mapStateToProps","state","song","selectedSong"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,CAHD;;AAKA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAED,KAAK,CAACE;AAAd,GAAP;AACD,CAHD;;AAIA,eAAeR,OAAO,CAACK,eAAD,CAAP,CAAyBJ,UAAzB,CAAf","sourcesContent":["// This component will not be making any changes to the state, since we are just using it to display details of a song. Since it won't change the state, we will not be using action creators here (like \"selectSong\")\n// Also since we aren't changing state, this will be a functional component instead of a class component\nimport React from \"react\";\n// We can use connect in functional components too\nimport { connect } from \"react-redux\";\n\nconst SongDetail = props => {\n  console.log(props);\n  return <div>Song detail</div>;\n};\n\nconst mapStateToProps = state => {\n  // From the incoming state, we want to access the \"selectedSong\" field which has the currently selected song. We assign it to a field called \"song\". We return this as a javascript object (and you will see it show up in the console in this format if you use console.log())\n  return { song: state.selectedSong };\n};\nexport default connect(mapStateToProps)(SongDetail);\n"]},"metadata":{},"sourceType":"module"}